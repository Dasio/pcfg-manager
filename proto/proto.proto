syntax = "proto3";


package proto;

service PCFG {
  rpc Connect (Empty) returns (ConnectResponse) {}
  rpc Disconnect(Empty) returns (Empty);
  rpc GetNextItems(Empty) returns (TreeItems) {}
}

message Empty {
}

message ConnectResponse {
  Grammar grammar = 1;
  repeated string hashList = 2;
}

message CrackingResponse {

}
message Grammar {
  string ruleName = 1;
  repeated Section sections = 2;
  map<string, IntMap> mapping = 3;
}

message IntMap {
  map<string, int32> value = 1;
}

message Replacement {
  double probability = 1;
  bool isTerminal = 2;
  repeated string values = 3;
  string function = 4;
  repeated int32 pos = 5;
}

message Section {
  string type = 1;
  string name = 2;
  repeated Replacement replacements = 3;
}

message TreeItems {
  repeated TreeItem items = 1;
}
message TreeItem {
  int32 index = 1;
  int32 transition = 2;
  repeated TreeItem childrens = 3;
  bool id = 4;
}